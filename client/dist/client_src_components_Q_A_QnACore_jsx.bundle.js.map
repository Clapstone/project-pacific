{"version":3,"file":"client_src_components_Q_A_QnACore_jsx.bundle.js","mappings":"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","sources":["webpack://project-pacific/./client/src/components/Q&A/QnACore.jsx","webpack://project-pacific/./client/src/components/Q&A/fakeData.js","webpack://project-pacific/./config.js"],"sourcesContent":["import React, { lazy, Suspense } from 'react';\n// import SearchAnswers from './SearchAnswers.jsx';\n//import QnAList from './QnAList.jsx';\n//import Question from './Question.jsx';\nimport axios from 'axios';\nimport { API_KEY } from '../../../../config.js'\nimport fakeData from './fakeData.js'\naxios.defaults.headers.common['Authorization'] = API_KEY;\nimport { TextField, Typography, Grid, OutlinedInput } from '@mui/material';\nimport Box from '@mui/material/Box';\nconst QnAList = lazy(() => import('./QnAList.jsx'))\nconst Question = lazy(() => import('./Question.jsx'))\n\n\nclass QnACore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      answers: [],\n      prodId: this.props.prodId,\n      userInput: '',\n      filteredQuestions: [],\n      count: 4,\n      allQuestions: [],\n      pageCount: 400\n    }\n    // this.getAnswers = this.getAnswers.bind(this);\n    this.getQuestions = this.getQuestions.bind(this);\n    this.filterSearch = this.filterSearch.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addCount = this.addCount.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n\n  getQuestions() {\n    axios.get(`/api/qa/questions/?product_id=${this.state.prodId}&count=${this.state.pageCount}`)\n      .then(async response => {\n        var sortedRes = response.data.results.sort(function (a, b) {\n          return b.question_helpfulness - a.question_helpfulness;\n        })\n        var temp = sortedRes.splice(0, this.state.count)\n        await this.setState({\n          questions: temp,\n          allQuestions: sortedRes,\n        })\n      }).catch(err => {\n        console.error(err)\n      })\n  }\n  grabUserInput(e) {\n    this.setState({\n      userInput: e.target.value\n    })\n  }\n\n  filterSearch(e) {\n    var filtered = this.state.allQuestions.filter(question => {\n      if (this.state.userInput.length < 3 || this.state.userInput === '') {\n        return;\n      } else if (question.question_body.toLowerCase().includes(this.state.userInput.toLowerCase())) {\n        return question;\n      }\n    })\n    var sortedFilter = filtered.sort(function (a, b) {\n      return b.question_helpfulness - a.question_helpfulness;\n    })\n    this.setState({\n      filteredQuestions: sortedFilter\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      userInput: '',\n    })\n  }\n\n  addCount(count) {\n    this.setState({\n      count: count\n    })\n    this.getQuestions()\n  }\n\n  render() {\n    var { questions } = this.state\n    return this.state.filteredQuestions.length > 0 ?\n      <div>\n        <Box sx={{\n          marginTop: 10,\n          marginLeft: 61,\n        }}>\n        </Box>\n        <div>\n          <Grid sx={{\n            margin: 'auto',\n            maxWidth: 750,\n            minWidth: 450,\n          }}>\n            <Grid xs={12} sm={6} md={12} item>\n              <div role='QnA-test1'>\n                <Typography variant='h6'>Questions & Answers</Typography>\n              </div>\n              <form onSubmit={this.handleSubmit}>\n                <input\n                  className='search-questions'\n                  placeholder='Have a question? Search for answersâ€¦'\n                  onChange={(e) => { this.grabUserInput(e), this.filterSearch(e) }}></input>\n              </form>\n            </Grid>\n          </Grid>\n        </div>\n        <div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <QnAList count={this.state.count} addCount={this.addCount} questions={this.state.filteredQuestions} />\n            <Question prodId={this.state.prodId} getQuestions={this.getQuestions} />\n          </Suspense>\n        </div>\n      </div> : (\n        (\n          <div>\n\n            <Box sx={{\n              marginTop: 10,\n              marginLeft: 61,\n            }}>\n            </Box>\n            <div>\n              <Grid sx={{\n                margin: 'auto',\n                maxWidth: 750,\n                minWidth: 450,\n              }}>\n                <Grid xs={12} sm={6} md={12} item>\n                  <div role='QnA-test1'>\n                    <Typography variant='h6'>Questions & Answers</Typography>\n                  </div>\n                  <form onSubmit={this.handleSubmit}>\n                    <input\n                      className='search-questions'\n                      placeholder='Have a question? Search for answersâ€¦'\n                      onChange={(e) => { this.grabUserInput(e), this.filterSearch(e) }}></input>\n                  </form>\n                </Grid>\n              </Grid>\n            </div>\n            <div>\n              <Suspense fallback={<div>Loading...</div>}>\n                <QnAList count={this.state.count} addCount={this.addCount} questions={this.state.questions} getQuestions={this.getQuestions} />\n                <Question prodId={this.state.prodId} getQuestions={this.getQuestions} />\n              </Suspense>\n            </div>\n          </div>\n        ))\n  }\n}\n\nexport default QnACore;","var fakeData = {\n  \"product_id\": \"42368\",\n  \"results\": [\n      {\n          \"question_id\": 426394,\n          \"question_body\": \"Can i wash it?\",\n          \"question_date\": \"2021-09-23T00:00:00.000Z\",\n          \"asker_name\": \"sally\",\n          \"question_helpfulness\": 4,\n          \"reported\": false,\n          \"answers\": {\n              \"3990163\": {\n                  \"id\": 3990163,\n                  \"body\": \"yes! \",\n                  \"date\": \"2021-09-23T00:00:00.000Z\",\n                  \"answerer_name\": \"Seller\",\n                  \"helpfulness\": 3,\n                  \"photos\": []\n              }\n          }\n      },\n      {\n          \"question_id\": 563413,\n          \"question_body\": \"test\",\n          \"question_date\": \"2022-01-06T00:00:00.000Z\",\n          \"asker_name\": \"unknown\",\n          \"question_helpfulness\": 1,\n          \"reported\": false,\n          \"answers\": {}\n      },\n      {\n          \"question_id\": 573501,\n          \"question_body\": \"is this test question posting?\",\n          \"question_date\": \"2022-02-21T00:00:00.000Z\",\n          \"asker_name\": \"mattest\",\n          \"question_helpfulness\": 0,\n          \"reported\": false,\n          \"answers\": {}\n      },\n      {\n          \"question_id\": 573500,\n          \"question_body\": \"is this test question working??\",\n          \"question_date\": \"2022-02-21T00:00:00.000Z\",\n          \"asker_name\": \"mattest\",\n          \"question_helpfulness\": 0,\n          \"reported\": false,\n          \"answers\": {}\n      },\n      {\n          \"question_id\": 573435,\n          \"question_body\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n          \"question_date\": \"2022-02-18T00:00:00.000Z\",\n          \"asker_name\": \"es\",\n          \"question_helpfulness\": 0,\n          \"reported\": false,\n          \"answers\": {}\n      },\n      {\n          \"question_id\": 573422,\n          \"question_body\": \"yeahh totallyfsfsfe\",\n          \"question_date\": \"2022-02-18T00:00:00.000Z\",\n          \"asker_name\": \"Estevan\",\n          \"question_helpfulness\": 0,\n          \"reported\": false,\n          \"answers\": {}\n      }\n  ],\n\n}\n\nexport default fakeData;\n","var API_KEY = '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';\nmodule.exports = {API_KEY};"],"names":["React","lazy","Suspense","axios","API_KEY","fakeData","defaults","headers","common","TextField","Typography","Grid","OutlinedInput","Box","QnAList","Question","QnACore","props","state","questions","answers","prodId","userInput","filteredQuestions","count","allQuestions","pageCount","getQuestions","bind","filterSearch","handleSubmit","addCount","get","then","response","sortedRes","data","results","sort","a","b","question_helpfulness","temp","splice","setState","err","console","error","e","target","value","filtered","filter","question","length","question_body","toLowerCase","includes","sortedFilter","preventDefault","marginTop","marginLeft","margin","maxWidth","minWidth","grabUserInput","Component","module","exports"],"sourceRoot":""}